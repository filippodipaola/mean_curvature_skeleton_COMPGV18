cmake_minimum_required(VERSION 3.9)
project(coursework3_local)

set(CMAKE_CXX_STANDARD 11)

SET( CMAKE_EXE_LINKER_FLAGS -lglfw)



# Where external libraries are
#set(THIRD_PARTY_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../../../externalLibrary)
set(THIRD_PARTY_DIR /Users/jimmy/externalLibrary)


# libigl
include_directories(${THIRD_PARTY_DIR}/libigl/include)

# eigen
include_directories(${THIRD_PARTY_DIR}/eigen3)

# nanoflann
include_directories(${THIRD_PARTY_DIR}/nanoflann/include)

# nanogui
# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_SHARED OFF CACHE BOOL " " FORCE)

# Add the configurations from nanogui
#add_subdirectory(${THIRD_PARTY_DIR}/libigl/external/nanogui /Users/jimmy/GoogleDrive/MScRobotics/GV18_AcquisitionProcessing3DGeometry/cw3/coursework3_local)
#include_directories(${THIRD_PARTY_DIR}/libigl/external/nanogui)

add_subdirectory(external/nanogui)
include_directories(external/nanogui/include)


# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

#Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})
# On top of adding the path to nanogui/include, you may need extras
include_directories(${NANOGUI_EXTRA_INCS})

add_definitions(-DIGL_VIEWER_WITH_NANOGUI)



# glew
#include_directories(${THIRD_PARTY_DIR}/glew/include)
set(GLEW_STATIC)
find_package(GLEW REQUIRED)
if (NOT DEFINED GLEW_LIBRARIES)
    MESSAGE(FATAL "GLEW LIBRARIES variable not filled...")
endif()


# spectra
include_directories(${THIRD_PARTY_DIR}/spectra/include)



# link frameworks
FIND_LIBRARY(COCOA_LIBRARY Cocoa)
FIND_LIBRARY(GLUT_LIBRARY GLUT )
FIND_LIBRARY(OpenGL_LIBRARY OpenGL )
MARK_AS_ADVANCED (COCOA_LIBRARY
        GLUT_LIBRARY
        OpenGL_LIBRARY
        NGUI_LIBRARY)
SET(EXTRA_LIBS ${COCOA_LIBRARY} ${GLUT_LIBRARY} ${OpenGL_LIBRARY})

### libIGL options: choose between header only and compiled static library
#option(LIBIGL_USE_STATIC_LIBRARY "Use LibIGL as static library" ON)
option(LIBIGL_WITH_VIEWER      "Use OpenGL viewer"  ON)
option(LIBIGL_WITH_NANOGUI     "Use Nanogui menu"   ON)
option(LIBIGL_WITH_EMBREE      "Use Embree"         ON)


# add qhull
include_directories(usr/local/include)
SET(QHULL_LIBS qhullcpp qhull_r)



# add executable
add_executable(coursework3_local main.cpp)


#target_link_libraries(coursework3_local ${EXTRA_LIBS})

#MESSAGE(STATUS "NANOGUI_EXTRA_LIBS: ${NANOGUI_EXTRA_LIBS}")
#MESSAGE(STATUS "NANOGUI_EXTRA_DEFS: ${NANOGUI_EXTRA_DEFS}")
#MESSAGE(STATUS "NANOGUI_EXTRA_INCS: ${NANOGUI_EXTRA_INCS}")

# Link dependency libraries
target_link_libraries(coursework3_local
        nanogui
        ${EXTRA_LIBS}
        ${NANOGUI_EXTRA_LIBS}
        #        ${GLEW_LIBRARIES}
        ${QHULL_LIBS}
        )
